// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * Configuration
 */
export type ConfigurationInput = {
    /**
     * Id
     */
    id?: string;
    /**
     * Name
     */
    name?: string;
    /**
     * Content
     */
    content?: string;
    /**
     * Default
     */
    default?: boolean;
    /**
     * Tools
     */
    tools?: Array<ToolConfiguration>;
};

/**
 * Configuration
 */
export type ConfigurationOutput = {
    /**
     * Id
     */
    id?: string;
    /**
     * Name
     */
    name?: string;
    /**
     * Content
     */
    content?: string;
    /**
     * Default
     */
    default?: boolean;
    /**
     * Tools
     */
    tools?: Array<ToolConfiguration>;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * ToolConfiguration
 */
export type ToolConfiguration = {
    /**
     * Name
     */
    name?: string;
    /**
     * Description
     */
    description?: string;
    /**
     * Parameters
     */
    parameters?: Array<ToolParameter>;
};

/**
 * ToolParameter
 */
export type ToolParameter = {
    /**
     * Name
     */
    name?: string;
    /**
     * Type
     */
    type?: string;
    /**
     * Description
     */
    description?: string;
    /**
     * Required
     */
    required?: boolean;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type ListConfigurationsConfigurationGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/configuration/';
};

export type ListConfigurationsConfigurationGetResponses = {
    /**
     * Response List Configurations Configuration  Get
     *
     * Successful Response
     */
    200: Array<ConfigurationOutput>;
};

export type ListConfigurationsConfigurationGetResponse = ListConfigurationsConfigurationGetResponses[keyof ListConfigurationsConfigurationGetResponses];

export type CreateConfigurationConfigurationPostData = {
    body: ConfigurationInput;
    path?: never;
    query?: never;
    url: '/configuration/';
};

export type CreateConfigurationConfigurationPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateConfigurationConfigurationPostError = CreateConfigurationConfigurationPostErrors[keyof CreateConfigurationConfigurationPostErrors];

export type CreateConfigurationConfigurationPostResponses = {
    /**
     * Successful Response
     */
    200: ConfigurationOutput;
};

export type CreateConfigurationConfigurationPostResponse = CreateConfigurationConfigurationPostResponses[keyof CreateConfigurationConfigurationPostResponses];

export type DeleteConfigurationConfigurationConfigurationIdDeleteData = {
    body?: never;
    path: {
        /**
         * Configuration Id
         */
        configuration_id: string;
    };
    query?: never;
    url: '/configuration/{configuration_id}/';
};

export type DeleteConfigurationConfigurationConfigurationIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteConfigurationConfigurationConfigurationIdDeleteError = DeleteConfigurationConfigurationConfigurationIdDeleteErrors[keyof DeleteConfigurationConfigurationConfigurationIdDeleteErrors];

export type DeleteConfigurationConfigurationConfigurationIdDeleteResponses = {
    /**
     * Response Delete Configuration Configuration  Configuration Id   Delete
     *
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteConfigurationConfigurationConfigurationIdDeleteResponse = DeleteConfigurationConfigurationConfigurationIdDeleteResponses[keyof DeleteConfigurationConfigurationConfigurationIdDeleteResponses];

export type GetConfigurationConfigurationConfigurationIdGetData = {
    body?: never;
    path: {
        /**
         * Configuration Id
         */
        configuration_id: string;
    };
    query?: never;
    url: '/configuration/{configuration_id}/';
};

export type GetConfigurationConfigurationConfigurationIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetConfigurationConfigurationConfigurationIdGetError = GetConfigurationConfigurationConfigurationIdGetErrors[keyof GetConfigurationConfigurationConfigurationIdGetErrors];

export type GetConfigurationConfigurationConfigurationIdGetResponses = {
    /**
     * Successful Response
     */
    200: ConfigurationOutput;
};

export type GetConfigurationConfigurationConfigurationIdGetResponse = GetConfigurationConfigurationConfigurationIdGetResponses[keyof GetConfigurationConfigurationConfigurationIdGetResponses];

export type UpdateConfigurationConfigurationConfigurationIdPutData = {
    body: ConfigurationInput;
    path: {
        /**
         * Configuration Id
         */
        configuration_id: string;
    };
    query?: never;
    url: '/configuration/{configuration_id}/';
};

export type UpdateConfigurationConfigurationConfigurationIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateConfigurationConfigurationConfigurationIdPutError = UpdateConfigurationConfigurationConfigurationIdPutErrors[keyof UpdateConfigurationConfigurationConfigurationIdPutErrors];

export type UpdateConfigurationConfigurationConfigurationIdPutResponses = {
    /**
     * Successful Response
     */
    200: ConfigurationOutput;
};

export type UpdateConfigurationConfigurationConfigurationIdPutResponse = UpdateConfigurationConfigurationConfigurationIdPutResponses[keyof UpdateConfigurationConfigurationConfigurationIdPutResponses];

export type GetDefaultConfigurationConfigurationDefaultGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/configuration/default/';
};

export type GetDefaultConfigurationConfigurationDefaultGetResponses = {
    /**
     * Successful Response
     */
    200: ConfigurationOutput;
};

export type GetDefaultConfigurationConfigurationDefaultGetResponse = GetDefaultConfigurationConfigurationDefaultGetResponses[keyof GetDefaultConfigurationConfigurationDefaultGetResponses];

export type SetDefaultConfigurationConfigurationConfigurationIdDefaultPatchData = {
    body?: never;
    path: {
        /**
         * Configuration Id
         */
        configuration_id: string;
    };
    query?: never;
    url: '/configuration/{configuration_id}/default/';
};

export type SetDefaultConfigurationConfigurationConfigurationIdDefaultPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SetDefaultConfigurationConfigurationConfigurationIdDefaultPatchError = SetDefaultConfigurationConfigurationConfigurationIdDefaultPatchErrors[keyof SetDefaultConfigurationConfigurationConfigurationIdDefaultPatchErrors];

export type SetDefaultConfigurationConfigurationConfigurationIdDefaultPatchResponses = {
    /**
     * Successful Response
     */
    200: ConfigurationOutput;
};

export type SetDefaultConfigurationConfigurationConfigurationIdDefaultPatchResponse = SetDefaultConfigurationConfigurationConfigurationIdDefaultPatchResponses[keyof SetDefaultConfigurationConfigurationConfigurationIdDefaultPatchResponses];

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
